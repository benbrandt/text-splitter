name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths-ignore:
      - "docs/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@c5a29ddb4d9d194e7c84ec8c3fba61b1c31fee8c
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1

      - name: Run cargo test
        run: cargo test --workspace --all-features

  coverage:
    runs-on: ubuntu-latest
    name: Test Coverage
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@c5a29ddb4d9d194e7c84ec8c3fba61b1c31fee8c
        with:
          toolchain: stable
          components: llvm-tools-preview
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1
      - uses: taiki-e/install-action@a2e9aff0dd6be615d6b832e1f2b409d7c7d1d8c2
        with:
          tool: cargo-llvm-cov
      - run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info
      - name: Upload to codecov.io
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  benchmarks:
    name: Test that benchmarks run
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@c5a29ddb4d9d194e7c84ec8c3fba61b1c31fee8c
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1

      - name: Run cargo test
        run: cargo test --benches --workspace --all-features

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@c5a29ddb4d9d194e7c84ec8c3fba61b1c31fee8c
        with:
          toolchain: stable
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1

      - run: cargo fmt -- --check
      - run: cargo clippy --workspace --all-features --all-targets

      - uses: taiki-e/install-action@a2e9aff0dd6be615d6b832e1f2b409d7c7d1d8c2
        with:
          tool: cargo-hack
      - name: cargo hack
        # Check that all feature combinations work
        run: cargo hack check --feature-powerset --no-dev-deps

  semver:
    name: semver
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Check semver
        uses: obi1kenobi/cargo-semver-checks-action@7272cc2caa468d3e009a2b0a9cc366839348237b

  msrv:
    runs-on: ubuntu-latest
    # we use a matrix here just because env can't be used in job names
    # https://docs.github.com/en/actions/learn-github-actions/contexts#context-availability
    strategy:
      matrix:
        msrv: [1.82.0]
    name: MSRV
    steps:
      - uses: actions/checkout@v5
      - name: Install ${{ matrix.msrv }}
        uses: dtolnay/rust-toolchain@c5a29ddb4d9d194e7c84ec8c3fba61b1c31fee8c
        with:
          toolchain: ${{ matrix.msrv }}
      - name: cargo +${{ matrix.msrv }} check
        run: cargo check

  minimal-versions:
    name: Check minimal versions
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@c5a29ddb4d9d194e7c84ec8c3fba61b1c31fee8c
        with:
          toolchain: nightly
      - uses: Swatinem/rust-cache@f13886b937689c021905a6b90929199931d60db1

      - run: cargo generate-lockfile -Z direct-minimal-versions
      - run: cargo test --locked --workspace --all-features
